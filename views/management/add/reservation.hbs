<div class="container-fluid">
  <div class="row d-flex justify-content-center">
    <div class="col-sm-10 mt-3">
      <div class="card shadow">

        <h3 class="card-header">
          <i class="fas fa-scroll"></i>
          &nbsp; New Reservation
        </h3>

        <div class="card-body">
          <form>
            <div class="form-group">
              <label for="room-name">Room</label>
              <select id="room-id" class="custom-select">
                <option disabled>Choose Room</option>
                {{#each availableRooms}}
                  <option id="room-{{this.room_id}}" value="{{this.room_id}}">{{this.room_name}}</option>
                {{/each}}
              </select>
            </div>
            <div class="form-group">
              <label for="room-type">Customers</label>
              <button type="button" id="btnCustomer" class="btn btn-outline-primary ml-2 mb-2">
                <i class="fas fa-user"></i>
                Add Customer
              </button>
              <table class="table table-hover" id="table_id" style="table-layout: fixed;">
                <thead>
                <tr>
                  <th class="col-2" scope="col">ID Card Number</th>
                  <th class="col-3" scope="col">Name</th>
                  <th class="col-4" scope="col">Address</th>
                  <th class="col-2" scope="col">Customer Type</th>
                  <th class="col-1" scope="col">Remove</th>
                </tr>
                </thead>
                <tbody id="customerTable">
                </tbody>
              </table>
            </div>

            <button type="button" id="btnReservation" class="btn btn-outline-success">
              <i class="fa fa-check" aria-hidden="true"></i>
              Add Reservation
            </button>
          </form>
        </div>

      </div>
    </div>
  </div>

</div>

{{#section "script"}}

  <!-- Sweetalert -->
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script type="text/x-handlebars-template" id="roomId">{{roomId}}</script>
  <script type="text/x-handlebars-template" id="rooms">{{json availableRooms}}</script>
  <script type="text/x-handlebars-template" id="cusTypes">{{json customerTypes}}</script>
  <script type="application/javascript">
    const roomId = parseInt(document.getElementById("roomId").innerText.trim());
    const roomString = document.getElementById("rooms").innerText.trim().replace(/&quot;/g, '"');
    const rooms = JSON.parse(roomString);
    const customerTypes = JSON.parse(document.getElementById("cusTypes").innerText.trim().replace(/&quot;/g, '"'));
    $(`#room-${roomId}`).prop("selected", true);

    const html = `<input type="text" id="idNumber" class="swal2-input" placeholder="Id Card Number">
            <input type="text" id="name" class="swal2-input" placeholder="Name">
            <input type="text" id="address" class="swal2-input" placeholder="Address">
            <select id="cus-type" class="swal2-input">
            <option disabled selected>Customer Type</option>
            ${customerTypes.map(type => `<option value="${type.type_id}">${type.type_name}</option>`).join('')}
            </select>`
    let customersArray = [];
    $('#btnCustomer').on('click', () => {
      Swal.fire({
        title: 'Add Customer',
        html: html,
        confirmButtonText: 'Add',
        focusConfirm: false,
        preConfirm: () => {
          const id_card_number = Swal.getPopup().querySelector('#idNumber').value
          const name = Swal.getPopup().querySelector('#name').value
          const address = Swal.getPopup().querySelector('#address').value
          const type = parseInt(Swal.getPopup().querySelector('#cus-type').value)
          if (!id_card_number || !name || !address || !type) {
            Swal.showValidationMessage(`Please fill all fields!`)
          }
          return {id_card_number, name, address, type}
        }
      }).then((result) => {
        if (!checkExisted(result.value.id_card_number)) {
            const selectedRoomId = parseInt($("#room-id").val());
            const maxGuests = rooms.find(room => room.room_id===selectedRoomId).max_of_customer;
          if (customersArray.length >= maxGuests) {
            Swal.fire({
              icon: "error",
              title: `Cannot add more than ${maxGuests} people`,
              showConfirmButton: false,
              timer: 2000
            });
          } else {
            customersArray.push(result.value);
            updateTable();
          }
        }
      })
    })

    function updateTable() {
      $('#customerTable').html('');
      customersArray.forEach((customer, index) => {
        const tr = `
                <tr id="${customer.id_card_number}">
                       <th scope="row">${customer.id_card_number}</th>
                       <td>${customer.name}</td>
                       <td>${customer.address}</td>
                       <td>${customerTypes.find(type => type.type_id === customer.type).type_name}</td>
                       <td class="text-center"><button class="btn py-0 px-1" onclick="remove(${index})"><i class="fas fa-minus text-danger"></i></button></td>
                </tr>
                `
        $('#customerTable').prepend(tr);
      });

    }

    function remove(index) {
      customersArray.splice(index, 1);
      updateTable();
    }

    function checkExisted(id_card_number) {
      if (customersArray.length === 0) return false;
      for (const customer of customersArray) {
        if (customer.id_card_number === id_card_number) {
          return true;
        }
      }
      return false;
    }

    $("#btnReservation").on("click", () => {
      const room_id = parseInt($("#room-id").val());
      const dataToPost = {
        room_id: room_id,
        customers: customersArray,
      };
      const jsonToPost = JSON.stringify(dataToPost);
      addReservation(jsonToPost);
    });

    function addReservation(data) {
      const protocol = window.location.protocol;
      const host = window.location.hostname;
      const port = window.location.port;
      const baseUrl = protocol + "//" + host + ":" + port;

      $.ajax({
        url: `${baseUrl}/reservations`,
        type: "POST",
        dataType: "json",
        data: data,
        contentType: "application/json"
      }).done(function (data) {
        console.log(data);
        Swal.fire({
          icon: "success",
          title: "Success",
          showConfirmButton: false,
          timer: 2000
        });
        window.location.assign(`${baseUrl}/reservations`);
      }).fail(function (error) {
        console.log(error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          showConfirmButton: false,
          timer: 2000
        });
      })
    }

  </script>
{{/section}}
